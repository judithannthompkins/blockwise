# Generated by Django 2.0.4 on 2018-04-05 17:16

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Crime',
            fields=[
                ('no1', models.CharField(default='000', help_text='Enter a number', max_length=10)),
                ('x', models.CharField(default='000', help_text='Enter a number', max_length=10)),
                ('report_dat', models.CharField(default='000', help_text='Enter a date', max_length=22)),
                ('shift', models.CharField(default='000', help_text='Enter a shift', max_length=8)),
                ('offense', models.CharField(help_text='Enter an offense', max_length=26)),
                ('method', models.CharField(default='000', help_text='Enter a method', max_length=6)),
                ('block', models.CharField(default='000', help_text='Enter a block', max_length=120)),
                ('district', models.CharField(default='000', help_text='Enter a district', max_length=10)),
                ('psa', models.CharField(default='000', help_text='Enter a psa', max_length=3)),
                ('ward', models.CharField(default='000', help_text='Enter a ward', max_length=5)),
                ('anc', models.CharField(default='000', help_text='Enter an anc', max_length=5)),
                ('neighborhood_cluster', models.CharField(default='000', help_text='Enter a neighborhood cluster', max_length=20)),
                ('block_group', models.CharField(default='000', help_text='Enter a block group', max_length=20)),
                ('census_tract', models.CharField(default='000', help_text='Enter a census tract', max_length=20)),
                ('voting_precinct', models.CharField(default='000', help_text='Enter a voting precinct', max_length=20)),
                ('cnn', models.CharField(default='000', help_text='Enter a model', max_length=10)),
                ('start_date', models.CharField(default='000', help_text='Enter a start date', max_length=22)),
                ('end_date', models.CharField(default='000', help_text='Enter an end date', max_length=22)),
                ('xblock', models.CharField(default='000', help_text='Enter an xblock', max_length=20)),
                ('yblock', models.CharField(default='000', help_text='Enter a yblock', max_length=20)),
                ('optional', models.CharField(default='000', help_text='Enter an optional numer', max_length=20)),
                ('date', models.CharField(default='000', help_text='Enter a date', max_length=19)),
                ('year', models.CharField(default='000', help_text='Enter a year', max_length=20)),
                ('month', models.CharField(default='000', help_text='Enter a month', max_length=10)),
                ('day', models.CharField(default='000', help_text='Enter a day', max_length=10)),
                ('hour', models.CharField(default='000', help_text='Enter a hour', max_length=10)),
                ('minute', models.CharField(default='000', help_text='Enter a minute', max_length=10)),
                ('second', models.CharField(default='000', help_text='Enter a number', max_length=10)),
                ('ew', models.CharField(default='000', help_text='Enter an ew', max_length=4)),
                ('ns', models.CharField(default='000', help_text='Enter a ns', max_length=5)),
                ('quad', models.CharField(default='000', help_text='Enter a quad', max_length=9)),
                ('crimetype', models.CharField(default='000', help_text='Enter a crime type', max_length=11)),
                ('block_street_number_begin', models.CharField(default='000', help_text='Enter a street number begin', max_length=20)),
                ('block_street_number_end', models.CharField(default='000', help_text='Enter a street number end', max_length=20)),
                ('block_street_name', models.CharField(default='Add street name', help_text='Enter a street name', max_length=300)),
                ('id', models.CharField(default='000', help_text='Enter a number', max_length=10, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=200)),
                ('street_name', models.CharField(default='Add street name', help_text='Enter a street name', max_length=300)),
                ('street_number', models.IntegerField(default=0)),
                ('address', models.CharField(default='Add an address', help_text='Enter an address', max_length=300)),
                ('accept_pickup', models.CharField(max_length=50, null=True)),
                ('categories', models.CharField(max_length=200, null=True)),
                ('city', models.CharField(help_text='Enter a city', max_length=100, null=True)),
                ('location_id', models.IntegerField(default=0)),
                ('price_range', models.CharField(max_length=50, null=True)),
                ('rank', models.IntegerField(default=0)),
                ('reservation_available', models.CharField(max_length=50, null=True)),
                ('review_count', models.IntegerField(default=0)),
                ('state', models.CharField(help_text='Enter a state', max_length=50, null=True)),
                ('url', models.CharField(max_length=200, null=True)),
                ('zip_code', models.CharField(help_text='Enter a zip code', max_length=20, null=True)),
                ('rating', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='LocationInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular book across whole library', primary_key=True, serialize=False)),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='blockadvisor.Location')),
            ],
        ),
    ]
